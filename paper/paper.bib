@article{biopython,
    author = {Cock, Peter J. A. and Antao, Tiago and Chang, Jeffrey T. and Chapman, Brad A. and Cox, Cymon J. and Dalke, Andrew and Friedberg, Iddo and Hamelryck, Thomas and Kauff, Frank and Wilczynski, Bartek and de Hoon, Michiel J. L.},
    title = "{Biopython: freely available Python tools for computational molecular biology and bioinformatics}",
    journal = {Bioinformatics},
    volume = {25},
    number = {11},
    pages = {1422-1423},
    year = {2009},
    month = {03},
    abstract = "{Summary: The Biopython project is a mature open source international collaboration of volunteer developers, providing Python libraries for a wide range of bioinformatics problems. Biopython includes modules for reading and writing different sequence file formats and multiple sequence alignments, dealing with 3D macro molecular structures, interacting with common tools such as BLAST, ClustalW and EMBOSS, accessing key online databases, as well as providing numerical methods for statistical learning.Availability: Biopython is freely available, with documentation and source code at www.biopython.org under the Biopython license.Contact: All queries should be directed to the Biopython mailing lists, see www.biopython.org/wiki/\_Mailing\_listspeter.cock@scri.ac.uk.}",
    issn = {1367-4803},
    doi = {10.1093/bioinformatics/btp163},
    url = {https://doi.org/10.1093/bioinformatics/btp163},
    eprint = {https://academic.oup.com/bioinformatics/article-pdf/25/11/1422/944180/btp163.pdf},
}

@article{biopdb,
    author = {Hamelryck, Thomas and Manderick, Bernard},
    title = "{PDB file parser and structure class implemented in Python}",
    journal = {Bioinformatics},
    volume = {19},
    number = {17},
    pages = {2308-2310},
    year = {2003},
    month = {11},
    abstract = "{Summary: The biopython project provides a set of bioinformatics tools implemented in Python. Recently, biopython was extended with a set of modules that deal with macromolecular structure. Biopython now contains a parser for PDB files that makes the atomic information available in an easy-to-use but powerful data structure. The parser and data structure deal with features that are often left out or handled inadequately by other packages, e.g. atom and residue disorder (if point mutants are present in the crystal), anisotropic B factors, multiple models and insertion codes. In addition, the parser performs some sanity checking to detect obvious errors.Availability: The Biopython distribution (including source code and documentation) is freely available (under the Biopython license) from http://www.biopython.org}",
    issn = {1367-4803},
    doi = {10.1093/bioinformatics/btg299},
    url = {https://doi.org/10.1093/bioinformatics/btg299},
    eprint = {https://academic.oup.com/bioinformatics/article-pdf/19/17/2308/537332/btg299.pdf},
}

@software{profit,
    author = {Martin, A. C. R. and Porter, C. T.},
    title = "{ProFit}",
    url = {http://www.bioinf.org.uk/software/profit/},
}

@article{mmtk,
author = {Hinsen, Konrad},
title = {The molecular modeling toolkit: A new approach to molecular simulations},
journal = {Journal of Computational Chemistry},

volume = {21},
number = {2},
pages = {79-85},
keywords = {molecular simulation, biomolecules, object-oriented design},
doi = {10.1002/(SICI)1096-987X(20000130)21:2<79::AID-JCC1>3.0.CO;2-B},
url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/%28SICI%291096-987X%2820000130%2921%3A2%3C79%3A%3AAID-JCC1%3E3.0.CO%3B2-B},
eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/%28SICI%291096-987X%2820000130%2921%3A2%3C79%3A%3AAID-JCC1%3E3.0.CO%3B2-B},
abstract = {Abstract The Molecular Modeling Toolkit is a library that implements common molecular simulation techniques, with an emphasis on biomolecular simulations. It uses modern software engineering techniques (object-oriented design, a high-level language) to overcome limitations associated with the large monolithic simulation programs that are commonly used for biomolecules. Its principal advantages are (1) easy extension and combination with other libraries due to modular library design; (2) a single high-level general-purpose programming language (Python) is used for library implementation as well as for application scripts; (3) use of documented and machine-independent formats for all data files; and (4) interfaces to other simulation and visualization programs. © 2000 John Wiley \& Sons, Inc. J Comput Chem 21: 79–85, 2000},
year = {2000}
}

@software{dbloader,
    author = {RCSB PDB},
    title = "{Db Loader}",
    url = {https://sw-tools.rcsb.org/apps/DB-LOADER/index.html},
}

@InProceedings{ mdanalysis,
  author    = { {R}ichard {J}. {G}owers and {M}ax {L}inke and {J}onathan {B}arnoud and {T}yler {J}. {E}. {R}eddy and {M}anuel {N}. {M}elo and {S}ean {L}. {S}eyler and {J}an {D}omański and {D}avid {L}. {D}otson and {S}ébastien {B}uchoux and {I}an {M}. {K}enney and {O}liver {B}eckstein },
  title     = { {M}{D}{A}nalysis: {A} {P}ython {P}ackage for the {R}apid {A}nalysis of {M}olecular {D}ynamics {S}imulations },
  booktitle = { {P}roceedings of the 15th {P}ython in {S}cience {C}onference },
  pages     = { 98 - 105 },
  year      = { 2016 },
  editor    = { {S}ebastian {B}enthall and {S}cott {R}ostrup },
  doi       = { 10.25080/Majora-629e541a-00e }
}

@incollection{sqlalchemy,
  place={Mountain View},
  title={SQLAlchemy},
  booktitle={The Architecture of Open Source Applications Volume II: Structure, Scale, and a Few More Fearless Hacks},
  publisher={aosabook.org},
  url="http://aosabook.org/en/sqlalchemy.html",
  author={Bayer, Michael},
  editor={Brown, Amy and Wilson, Greg},
  year={2012}
}

@article{iscore,
    author = {Geng, Cunliang and Jung, Yong and Renaud, Nicolas and Honavar, Vasant and Bonvin, Alexandre M J J and Xue, Li C},
    title = "{i{S}core: A novel graph kernel-based function for scoring protein-protein docking models}",
    journal = {Bioinformatics},
    year = {2019},
    month = {06},
    issn = {1367-4803},
    doi = {10.1093/bioinformatics/btz496},
 }

 @article{prody,
    author = {Bakan, A. and Meireles, L. M. and Bahar, I.},
    title = "{ProDy : Protein Dynamics Inferred from Theory and Experiments}",
    journal = {Bioinformatics},
    volume = {27},
    number = {11},
    pages = {1575-1577},
    year = {2011},
 }

 @article{biojava,
    author = {Lafita, Aleix AND Bliven, Spencer AND Prlić, Andreas AND Guzenko, Dmytro AND Rose, Peter W. AND Bradley, Anthony AND Pavan, Paolo AND Myers-Turnbull, Douglas AND Valasatava, Yana AND Heuer, Michael AND Larson, Matt AND Burley, Stephen K. AND Duarte, Jose M.},
    journal = {PLOS Computational Biology},
    publisher = {Public Library of Science},
    title = {BioJava 5: A community driven open-source bioinformatics library},
    year = {2019},
    month = {02},
    volume = {15},
    url = {https://doi.org/10.1371/journal.pcbi.1006791},
    pages = {1-8},
    abstract = {BioJava is an open-source project that provides a Java library for processing biological data. The project aims to simplify bioinformatic analyses by implementing parsers, data structures, and algorithms for common tasks in genomics, structural biology, ontologies, phylogenetics, and more. Since 2012, we have released two major versions of the library (4 and 5) that include many new features to tackle challenges with increasingly complex macromolecular structure data. BioJava requires Java 8 or higher and is freely available under the LGPL 2.1 license. The project is hosted on GitHub at https://github.com/biojava/biojava. More information and documentation can be found online on the BioJava website (http://www.biojava.org) and tutorial (https://github.com/biojava/biojava-tutorial). All inquiries should be directed to the GitHub page or the BioJava mailing list (http://lists.open-bio.org/mailman/listinfo/biojava-l).},
    number = {2},
    doi = {10.1371/journal.pcbi.1006791}
}